// C++ code
//
#define A 7
#define B 8
#define C 4
#define D 3
#define E 2
#define G 5
#define F 6 //Hasta acá defino los segmentos con su letra y su pin.
#define display_numero_uno 10
#define display_numero_dos 9 //Defino el pin para controlar los displays.
#define boton_incrementar A0
#define boton_decrementar A1
#define boton_resetear A2 //Hasta acá defino los botones y sus pines.


int tiempo_control;
int cuenta;
int unidades;
int decenas;

void setup()
{
  pinMode(A, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(D, OUTPUT);
  pinMode(E, OUTPUT);
  pinMode(F, OUTPUT);
  pinMode(G, OUTPUT);
  pinMode(display_numero_uno, OUTPUT);
  pinMode(display_numero_dos, OUTPUT);
  pinMode(boton_incrementar, INPUT_PULLUP);
  pinMode(boton_decrementar, INPUT_PULLUP);
  pinMode(boton_resetear, INPUT_PULLUP);
  tiempo_control = 5;
  cuenta = 0;
  
}

void loop()
{
  //Utilizo tres funciones para los botones y su funcionalidad
  //depende de lo que se requiera. Se maneja con una variable
  //incrementandola, decrementandola o reseteando la variable.

  incrementar_numeros();
  decrementar_numeros();
  resetear_display();
  
  //Con el número de la variable incrementada o decrementada,
  //realizo una cuenta para sacar la unidad del número de la 
  //variable y otra para sacar la decena.
  unidades = cuenta % 10;
  decenas = cuenta / 10;
  
  apagar_numero(); //Tengo que apagar el display un instante 
  //para que no se vea el número fantasma.
  
  encender_display_unidades();//Utilizo esta funcion para mostrar
  //en el display de la dereccha las unidades.
  
  apagar_numero();//Apago el display un instante.
  
  encender_display_decena();//Utilizo esta funcion para mostrar
  //en el display de la izquierda las decenas.
  
}

void formar_unidades_decenas(int numero)
{
  //Dependiendo del número que le paso como parametro del 0 al 9
  //formo ese número con los segmentos del display.
  //Retorna la combinación de segmentos encendidos para que se 
  //muestre el número requerido.
  switch (numero){
    case 0:
 	return void(formar_numero_cero());
    case 1:
    return void(formar_numero_uno());
    case 2:
    return void(formar_numero_dos());
    case 3:
    return void(formar_numero_tres());
    case 4:
    return void(formar_numero_cuatro());
    case 5:
    return void(formar_numero_cinco());
    case 6:
    return void(formar_numero_seis());
    case 7:
    return void(formar_numero_siete());
    case 8:
    return void(formar_numero_ocho());
    case 9:
    return void(formar_numero_nueve());
  }

}

  
void apagar_numero()
{
  //Apago todos los segmentos del display. 
  digitalWrite(A, LOW);
  digitalWrite(B, LOW);
  digitalWrite(C, LOW);
  digitalWrite(D, LOW);
  digitalWrite(E, LOW);
  digitalWrite(F, LOW);
  digitalWrite(G, LOW); 
}

void incrementar_numeros()
{
  //Incrementa el valor de la variable cada vez que presiono
  //el boton incrementador. Si la cuenta da mayor a 99, reinicio
  //la variable a cero.
  if (digitalRead(boton_incrementar) == LOW){
  	cuenta = cuenta + 1;
    if (cuenta > 99){
      cuenta = 0;
    }
    delay(200);//Espero para generar un antirebote.
  }
}

void decrementar_numeros()
{
  //Decrementa el valor de la variable cada vez que presiono
  //el boton decrementador. Si la cuenta da menor a 0, coloco
  //la variable a 99.
  if (digitalRead(boton_decrementar) == LOW){
  	cuenta = cuenta - 1;
    if (cuenta < 0){
      cuenta = 99;
    }
    delay(200);//Espero para generar un antirebote.
  }
}


void resetear_display()
{
  //Pone la variable en cero, en cualquier momento.
  if (digitalRead(boton_resetear) == LOW){
    cuenta = 0;
  }
}

void encender_display_decena()
{
  //Una vez calculada la decena, enciendo el display de la 
  //izquierda y apago el de la derecha, por un tiempo muy chiquito
  //y muestro el numero.
  digitalWrite(display_numero_uno, LOW);
  digitalWrite(display_numero_dos, HIGH);
  formar_unidades_decenas(decenas);
  delay(tiempo_control);//controla la multiplexación 
}

void encender_display_unidades()
{
  //Una vez calculada la unidad, enciendo el display de la 
  //derecha y apago el de la izquierda, por un tiempo muy chiquito
  //y muestro el numero.
  digitalWrite(display_numero_uno, HIGH);
  digitalWrite(display_numero_dos, LOW);
  formar_unidades_decenas(unidades);
  delay(tiempo_control);//controla la multiplexación
}

//De acá hasta el final, hay 10 funciones las cuales realizan
//una combinacion de prendido y apagado entre los segmentos
//del display para formar un número.
void formar_numero_cero()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, HIGH);
  digitalWrite(E, HIGH);
  digitalWrite(F, HIGH);
  digitalWrite(G, LOW);
}

void formar_numero_uno()
{
  digitalWrite(A, LOW);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, LOW);
  digitalWrite(E, LOW);
  digitalWrite(F, LOW);
  digitalWrite(G, LOW);
}

void formar_numero_dos()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, HIGH);
  digitalWrite(C, LOW);
  digitalWrite(D, HIGH);
  digitalWrite(E, HIGH);
  digitalWrite(F, LOW);
  digitalWrite(G, HIGH);
}

void formar_numero_tres()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, HIGH);
  digitalWrite(E, LOW);
  digitalWrite(F, LOW);
  digitalWrite(G, HIGH);
}

void formar_numero_cuatro()
{
  digitalWrite(A, LOW);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, LOW);
  digitalWrite(E, LOW);
  digitalWrite(F, HIGH);
  digitalWrite(G, HIGH);
}

void formar_numero_cinco()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, LOW);
  digitalWrite(C, HIGH);
  digitalWrite(D, HIGH);
  digitalWrite(E, LOW);
  digitalWrite(F, HIGH);
  digitalWrite(G, HIGH);
}

void formar_numero_seis()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, LOW);
  digitalWrite(C, HIGH);
  digitalWrite(D, HIGH);
  digitalWrite(E, HIGH);
  digitalWrite(F, HIGH);
  digitalWrite(G, HIGH);
}

void formar_numero_siete()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, LOW);
  digitalWrite(E, LOW);
  digitalWrite(F, LOW);
  digitalWrite(G, LOW);
}

void formar_numero_ocho()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, HIGH);
  digitalWrite(E, HIGH);
  digitalWrite(F, HIGH);
  digitalWrite(G, HIGH);
}

void formar_numero_nueve()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, LOW);
  digitalWrite(E, LOW);
  digitalWrite(F, HIGH);
  digitalWrite(G, HIGH);
}