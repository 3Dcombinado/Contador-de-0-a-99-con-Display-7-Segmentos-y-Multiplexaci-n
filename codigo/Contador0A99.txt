// C++ code
//
#define A 7
#define B 8
#define C 4
#define D 3
#define E 2
#define G 5
#define F 6 //Hasta acá defino los segmentos con su letra y su pin.
#define display_numero_uno 10
#define display_numero_dos 9 //Defino el pin para controlar los displays.
#define boton_incrementar A0
#define boton_decrementar A1
#define switchh A2 //Hasta acá defino los botones y sus pines.
#define SENSOR A3
#define LDR A4
int tiempo_control;
int cuenta;
int unidades;
int decenas;
bool estado;
int numero;
int primo;
int subo_o_bajo;
int contador;
int temperatura;
int valor_ldr;
void setup()
{
  pinMode(A, OUTPUT);
  pinMode(B, OUTPUT);
  pinMode(C, OUTPUT);
  pinMode(D, OUTPUT);
  pinMode(E, OUTPUT);
  pinMode(F, OUTPUT);
  pinMode(G, OUTPUT);
  pinMode(display_numero_uno, OUTPUT);
  pinMode(display_numero_dos, OUTPUT);
  pinMode(boton_incrementar, INPUT_PULLUP);
  pinMode(boton_decrementar, INPUT_PULLUP);
  pinMode(switchh, INPUT);
  tiempo_control = 5;
  cuenta = 0;
  
}

void loop()
{
 
  incrementar_numeros();
  decrementar_numeros();
  
  apagar_displays_luz();
  alterar_display_segun_temperatura();
  
  
  if (digitalRead(switchh) == HIGH){
    calcular_par(cuenta);
  }else{
    cuenta = cuenta;
  }
  
  
  unidades = cuenta % 10;
  decenas = cuenta / 10; 
  
  apagar_numero(); 
  
  encender_display_unidades();
  
  apagar_numero();
  
  encender_display_decena();
}



  
////////////////////// MANEJO DE BOTONES //////////////////////////////////////

void incrementar_numeros()
{
  //Incrementa el valor de la variable cada vez que presiono
  //el boton incrementador. Si la cuenta da mayor a 99, reinicio
  //la variable a cero.
  if (digitalRead(boton_incrementar) == LOW){
    subo_o_bajo = 1;
  	cuenta = cuenta + 1;
    if (cuenta > 99){
      cuenta = 0;
    }
    delay(200);//Espero para generar un antirebote.
  }
}

void decrementar_numeros()
{
  //Decrementa el valor de la variable cada vez que presiono
  //el boton decrementador. Si la cuenta da menor a 0, coloco
  //la variable a 99.
  if (digitalRead(boton_decrementar) == LOW){
    subo_o_bajo = 0;
  	cuenta = cuenta - 1;
    if (cuenta < 0){
      cuenta = 99;
    }
    delay(200);//Espero para generar un antirebote.
  }
}
    



//////////////////// MANEJO DE DISPLAYS /////////////////////////////////////

void encender_display_decena()
{
  //Una vez calculada la decena, enciendo el display de la 
  //izquierda y apago el de la derecha, por un tiempo muy chiquito
  //y muestro el numero.
  digitalWrite(display_numero_uno, LOW);
  digitalWrite(display_numero_dos, HIGH);
  formar_unidades_decenas(decenas);
  delay(tiempo_control);//controla la multiplexación 
}

void encender_display_unidades()
{
  //Una vez calculada la unidad, enciendo el display de la 
  //derecha y apago el de la izquierda, por un tiempo muy chiquito
  //y muestro el numero.
  digitalWrite(display_numero_uno, HIGH);
  digitalWrite(display_numero_dos, LOW);
  formar_unidades_decenas(unidades);
  delay(tiempo_control);//controla la multiplexación
}



//////////////////// CALCULO DE NUMEROS PARES //////////////////////////////
void verificar_par(int numero)
{
  //Esta funcion permite saber si el número es
  //par o impar devolviendo un booleano.
  //True = Es par ; False = no es par.
  if (numero % 2 == 0){
   estado = true; 
  }else{
    estado = false;
  }
}


void calcular_par(int numero)
{
  //Esta función sirve para encontrar un número par
  //si no lo hay y lo devuelve para en este proyecto 
  //mostrarlo en los displays.
  verificar_par(numero);//Verifico si el numero es par
  if (estado == true){
    cuenta = numero;//si es par solo lo muestro.
  }else{//si no es par, incremento en una unidad
    //y verifico si es par. Está encerrado en un bucle
    //para que no salga de ahi hasta que me encuentre 
    //un numero par
    if (subo_o_bajo == 1){
      while(estado == false){
        numero = numero + 1;
        calcular_par(numero);
      }
    }else{
      while(estado == false){
        numero = numero - 1;
        calcular_par(numero);
      }
    }
  }
}
  



//////////////////// MANEJO DEL SENSOR DE TEMPERATURA ////////////////////////

void conversion_valores_grados()
{
  //Leo el sensor y convierto el valor analogico a centigrados
  //con la funcion map.
	temperatura = analogRead(SENSOR);
  	temperatura = map(temperatura, 20,358,-40,125);
}

void alterar_display_segun_temperatura()
{
  conversion_valores_grados();
  while(temperatura < 0 or temperatura > 100){
    formar_alerta();
    conversion_valores_grados();
    if (temperatura > 0 and temperatura < 100){
     break; 
    }
  }
    
}


////////////MANEJO DEL SENSOR LDR //////////////////
void capturar_valor_ldr()
{
  //solo capturo el valor digital que me entrega el sensor
  //en el pin analogico
 valor_ldr = analogRead(LDR); 
}

void apagar_displays_luz()
{
  capturar_valor_ldr();//Llamo a la funcion para saber el valor
  //de el pin analogico
  //mientras el valor sea mayor a 960, significa que hay mucha luz
  //entonces apago los displays.
  while(valor_ldr > 960){
    apagar_numero();
    //dentro del while capturo de nuevo el valor del pin analogico
    //para verificar si hubo un cambio
    capturar_valor_ldr();
    //si hubo cambio rompo el bucle y vuelvo a mostrar el contador
    if (valor_ldr < 960){
      break;
    }
  }
    
}

////////////////////// FORMACION DE NUMEROS ///////////////////////////////

void formar_unidades_decenas(int numero)
{
  //Dependiendo del número que le paso como parametro del 0 al 9
  //formo ese número con los segmentos del display.
  //Retorna la combinación de segmentos encendidos para que se 
  //muestre el número requerido.
  switch (numero){
    case 0:
 	return void(formar_numero_cero());
    case 1:
    return void(formar_numero_uno());
    case 2:
    return void(formar_numero_dos());
    case 3:
    return void(formar_numero_tres());
    case 4:
    return void(formar_numero_cuatro());
    case 5:
    return void(formar_numero_cinco());
    case 6:
    return void(formar_numero_seis());
    case 7:
    return void(formar_numero_siete());
    case 8:
    return void(formar_numero_ocho());
    case 9:
    return void(formar_numero_nueve());
  }

}




  

void apagar_numero()
{
  //Apago todos los segmentos del display. 
  digitalWrite(A, LOW);
  digitalWrite(B, LOW);
  digitalWrite(C, LOW);
  digitalWrite(D, LOW);
  digitalWrite(E, LOW);
  digitalWrite(F, LOW);
  digitalWrite(G, LOW); 
}

void formar_alerta()
{
  digitalWrite(A, LOW);
  digitalWrite(B, LOW);
  digitalWrite(C, LOW);
  digitalWrite(D, LOW);
  digitalWrite(E, LOW);
  digitalWrite(F, LOW);
  digitalWrite(G, HIGH);
}

//De acá hasta el final, hay 10 funciones las cuales realizan
//una combinacion de prendido y apagado entre los segmentos
//del display para formar un número.
void formar_numero_cero()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, HIGH);
  digitalWrite(E, HIGH);
  digitalWrite(F, HIGH);
  digitalWrite(G, LOW);
}

void formar_numero_uno()
{
  digitalWrite(A, LOW);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, LOW);
  digitalWrite(E, LOW);
  digitalWrite(F, LOW);
  digitalWrite(G, LOW);
}

void formar_numero_dos()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, HIGH);
  digitalWrite(C, LOW);
  digitalWrite(D, HIGH);
  digitalWrite(E, HIGH);
  digitalWrite(F, LOW);
  digitalWrite(G, HIGH);
}

void formar_numero_tres()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, HIGH);
  digitalWrite(E, LOW);
  digitalWrite(F, LOW);
  digitalWrite(G, HIGH);
}

void formar_numero_cuatro()
{
  digitalWrite(A, LOW);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, LOW);
  digitalWrite(E, LOW);
  digitalWrite(F, HIGH);
  digitalWrite(G, HIGH);
}

void formar_numero_cinco()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, LOW);
  digitalWrite(C, HIGH);
  digitalWrite(D, HIGH);
  digitalWrite(E, LOW);
  digitalWrite(F, HIGH);
  digitalWrite(G, HIGH);
}

void formar_numero_seis()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, LOW);
  digitalWrite(C, HIGH);
  digitalWrite(D, HIGH);
  digitalWrite(E, HIGH);
  digitalWrite(F, HIGH);
  digitalWrite(G, HIGH);
}

void formar_numero_siete()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, LOW);
  digitalWrite(E, LOW);
  digitalWrite(F, LOW);
  digitalWrite(G, LOW);
}

void formar_numero_ocho()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, HIGH);
  digitalWrite(E, HIGH);
  digitalWrite(F, HIGH);
  digitalWrite(G, HIGH);
}

void formar_numero_nueve()
{
  digitalWrite(A, HIGH);
  digitalWrite(B, HIGH);
  digitalWrite(C, HIGH);
  digitalWrite(D, LOW);
  digitalWrite(E, LOW);
  digitalWrite(F, HIGH);
  digitalWrite(G, HIGH);
}
